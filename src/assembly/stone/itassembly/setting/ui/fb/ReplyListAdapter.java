package assembly.stone.itassembly.setting.ui.fb;import java.lang.reflect.Constructor;import java.text.SimpleDateFormat;import java.util.HashMap;import java.util.List;import android.content.Context;import android.view.LayoutInflater;import android.view.View;import android.view.ViewGroup;import android.widget.BaseAdapter;import android.widget.TextView;import assembly.stone.itassembly.R;import com.umeng.fb.model.Conversation;import com.umeng.fb.model.DevReply;import com.umeng.fb.model.Reply;public class ReplyListAdapter extends BaseAdapter {	HashMap<Integer, View> lmap = new HashMap<Integer, View>();	private Context mContext;	private LayoutInflater mInflater;	private Conversation defaultConversation;	public ReplyListAdapter(Context context, Conversation defaultConversation) {		this.mContext = context;		mInflater = LayoutInflater.from(mContext);		this.defaultConversation = defaultConversation;	}	/**	 * 	 * @param content	 *            提示用户的内容	 * @return	 */	@SuppressWarnings({ "rawtypes", "unchecked" })	private DevReply createInitDevReply(String content) {		try {			Class c = com.umeng.fb.model.DevReply.class;			Constructor constructor = c.getDeclaredConstructor(new Class[] { String.class, String.class, String.class,					String.class, String.class });			constructor.setAccessible(true);			DevReply devReply = (DevReply) constructor.newInstance(new Object[] { content, "appkey", "userid",					"feedback_id", "user_name" });			return devReply;		} catch (Exception e) {			e.printStackTrace();		}		return null;	}	@Override	public int getCount() {		List<Reply> replyList = defaultConversation.getReplyList();		return (replyList == null) ? 1 : replyList.size() + 1;	}	/*	 * (non-Javadoc)	 * 	 * @see android.widget.Adapter#getView(int, android.view.View,	 * android.view.ViewGroup)	 */	@Override	public View getView(int position, View convertView, ViewGroup parent) {		ViewHolder holder;		Reply reply;		if (position == 0) {			// 自定义提示内容			reply = createInitDevReply(mContext.getResources().getString(R.string.fb_welcome));		} else {			reply = defaultConversation.getReplyList().get(position - 1);		}		if (lmap.get(position) == null) {			holder = new ViewHolder();			if (reply instanceof DevReply) { // 开发回复				convertView = mInflater.inflate(R.layout.system_reply, null);				holder.replyDate = (TextView) convertView.findViewById(R.id.system_chat_time_text);				holder.replyContent = (TextView) convertView.findViewById(R.id.system_reply_text);				holder.replyDate.setText(SimpleDateFormat.getDateTimeInstance().format(reply.getDatetime()));				holder.replyContent.setText(reply.getContent());			} else { // 用户回复				convertView = mInflater.inflate(R.layout.users_reply, null);				holder.replyDate = (TextView) convertView.findViewById(R.id.user_chat_time_text);				holder.replyContent = (TextView) convertView.findViewById(R.id.user_reply_text);				holder.replyDate.setText(SimpleDateFormat.getDateTimeInstance().format(reply.getDatetime()));				holder.replyContent.setText(reply.getContent());			}			lmap.put(position, convertView);			convertView.setTag(holder);		} else {			convertView = lmap.get(position);			holder = (ViewHolder) convertView.getTag();		}		return convertView;	}	/*	 * (non-Javadoc)	 * 	 * @see android.widget.Adapter#getItem(int)	 */	@Override	public Object getItem(int position) {		return defaultConversation.getReplyList().get(position);	}	/*	 * (non-Javadoc)	 * 	 * @see android.widget.Adapter#getItemId(int)	 */	@Override	public long getItemId(int position) {		return position;	}	class ViewHolder {		TextView replyDate;		TextView replyContent;	}}