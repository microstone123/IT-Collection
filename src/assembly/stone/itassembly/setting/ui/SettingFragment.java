package assembly.stone.itassembly.setting.ui;import android.os.Bundle;import android.view.View;import android.widget.AdapterView;import android.widget.AdapterView.OnItemClickListener;import android.widget.ListView;import assembly.stone.itassembly.R;import assembly.stone.itassembly.base.ui.BaseHomeFragment.SimpleBaseHomeFragment;import assembly.stone.itassembly.setting.adapter.SettingBottomAdaper;import assembly.stone.itassembly.setting.ui.fb.FeedbackAgentqq;import assembly.stone.itassembly.util.ToastUtil;import com.umeng.update.UmengUpdateAgent;import com.umeng.update.UmengUpdateListener;import com.umeng.update.UpdateResponse;import com.umeng.update.UpdateStatus;public class SettingFragment extends SimpleBaseHomeFragment {	private SettingBottomAdaper settingBottomAdaper;	private ListView bottomList;	private FeedbackAgentqq feedbackAgentqq;	@Override	public void onCreate(Bundle savedInstanceState) {		super.onCreate(savedInstanceState);		layoutResourceId = R.layout.setting_layout;		tag = "httpForLeiPhone";		feedbackAgentqq = new FeedbackAgentqq(mActivity);		feedbackAgentqq.sync();	}	@Override	protected void initView() {		bottomList = (ListView) mHoseView.findViewById(R.id.setting_bottom_list);		getData();	}	@Override	protected void getData() {		settingBottomAdaper = new SettingBottomAdaper(mActivity);		bottomList.setAdapter(settingBottomAdaper);		bottomList.setOnItemClickListener(new OnItemClickListener() {			@Override			public void onItemClick(AdapterView<?> arg0, View arg1, int arg2, long arg3) {				switch (arg2) {				case 0:					umengUpdata();					break;				case 1:					setIntent(AboutUsActivity.class);					break;				case 2:					feedbackAgentqq.startFeedbackActivity();					break;				case 3:					setIntent(ShareSoftwareActivity.class);					break;				case 4:					setIntent(PersonalCustomizateActivity.class);					break;				default:					break;				}			}		});	}	private void umengUpdata() {		UmengUpdateAgent.forceUpdate(mActivity);		UmengUpdateAgent.setUpdateListener(new UmengUpdateListener() {			@Override			public void onUpdateReturned(int updateStatus, UpdateResponse updateInfo) {				switch (updateStatus) {				case UpdateStatus.Yes: // has update					UmengUpdateAgent.showUpdateDialog(mActivity, updateInfo);					break;				case UpdateStatus.No: // has no update					ToastUtil.show(mActivity, R.string.update_final);					break;				case UpdateStatus.NoneWifi: // none wifi					ToastUtil.show(mActivity, R.string.update_final);					break;				case UpdateStatus.Timeout: // time out					ToastUtil.show(mActivity, R.string.str_timeout);					break;				}			}		});		UmengUpdateAgent.forceUpdate(mActivity);	}}